#pragma once

namespace Quadrature {

	namespace Gauss_Laguerre {

		template<int N>
		inline const double* Points() { return nullptr; };
		template<int N>
		inline const double* Weight() { return nullptr; };
		template<int N>
		inline const double* WeightG() { return nullptr; };

				
					

		static constexpr const double points2[2] = {
				0.5857864376269049511983,
				3.414213562373095048802,
		};
		template<>
		inline const double* Points<2>() { return points2; }

		static constexpr const double weight2[2] = {
				0.8535533905932737622004,
				0.1464466094067262377996,
		};

		template<>
		inline const double* Weight<2>() { return weight2; }

		static constexpr const double weight_exp2[2] = {
			1.533326033119416841673,
			4.45095733505459280061,
		};

		template<>
		inline const double* WeightG<2>() { return weight_exp2; }

					
					
		static constexpr const double points3[3] = {
				0.4157745567834790833115,
				2.29428036027904171982,
				6.289945082937479196866,
		};
		template<>
		inline const double* Points<3>() { return points3; }

		static constexpr const double weight3[3] = {
				0.71109300992917301545,
				0.2785177335692408488014,
				0.01038925650158613574897,
		};

		template<>
		inline const double* Weight<3>() { return weight3; }

		static constexpr const double weight_exp3[3] = {
			1.077692859270920797916,
			2.762142961901587244574,
			5.601094625434426260359,
		};

		template<>
		inline const double* WeightG<3>() { return weight_exp3; }



		static constexpr const double points4[4] = {
				0.3225476896193923118004,
				1.745761101158346575687,
				4.536620296921127983279,
				9.395070912301133129234,
		};
		template<>
		inline const double* Points<4>() { return points4; }

		static constexpr const double weight4[4] = {
				0.603154104341633601636,
				0.3574186924377996866415,
				0.03888790851500538427244,
				5.392947055613274501038E-4,
		};

		template<>
		inline const double* Weight<4>() { return weight4; }

		static constexpr const double weight_exp4[4] = {
			0.8327391238378892466121,
			2.0481024384542968214,
			3.631146305821517861596,
			6.487145084407662271595,
		};

		template<>
		inline const double* WeightG<4>() { return weight_exp4; }

		static constexpr const double points8[8] = {
			0.170279632305100999789,
			0.903701776799379912186,
			2.25108662986613068931,
			4.266700170287658793649,
			7.045905402393465697279,
			10.75851601018099522406,
			15.74067864127800457803,
			22.8631317368892641057,
		};
		template<>
		inline const double* Points<8>() { return points8; }

		static constexpr const double weight8[8] = {
			0.369188589341637529921,
			0.418786780814342956077,
			0.1757949866371718056997,
			0.03334349226121565152213,
			0.00279453623522567252494,
			9.07650877335821310424E-5,
			8.48574671627253154487E-7,
			1.04800117487151038162E-9,
		};
		template<>
		inline const double* Weight<8>() { return weight8; }

		static constexpr const double weight_exp8[8] = {
			0.437723410492911373233,
			1.033869347665597642499,
			1.669709765658775749154,
			2.376924701758599480959,
			3.208540913347926284248,
			4.268575510825132198584,
			5.81808336867192192829,
			8.9062262152922114065,
		};

		template<>
		inline const double* WeightG<8>() { return weight_exp8; }


		static constexpr const double points16[16] = {
			0.0876494104789278403602,
			0.462696328915080831881,
			1.141057774831226856878,
			2.129283645098380616326,
			3.437086633893206645235,
			5.078018614549767912923,
			7.0703385350482341304,
			9.438314336391938783947,
			12.21422336886615873694,
			15.44152736878161707677,
			19.18015685675313485466,
			23.51590569399190853182,
			28.57872974288214036752,
			34.58339870228662581453,
			41.94045264768833263547,
			51.70116033954331836434,
		};
		template<>
		inline const double* Points<16>() { return points16; }

		static constexpr const double weight16[16] = {
			0.2061517149578009943343,
			0.331057854950884165993,
			0.2657957776442141526,
			0.136296934296377539976,
			0.0473289286941252189781,
			0.0112999000803394532312,
			0.00184907094352631086429,
			2.04271915308278460126E-4,
			1.484458687398129877135E-5,
			6.8283193308711995644E-7,
			1.88102484107967321388E-8,
			2.86235024297388161963E-10,
			2.12707903322410296739E-12,
			6.2979670025178677872E-15,
			5.0504737000355128204E-18,
			4.16146237037285519043E-22,
		};
		template<>
		inline const double* Weight<16>() { return weight16; }

		static constexpr const double weight_exp16[16] = {
			0.2250363148642472519066,
			0.525836052762342453615,
			0.831961391687087087665,
			1.146099240963751704648,
			1.471751316966808588743,
			1.813134687381348164887,
			2.175517519694607452063,
			2.565762750165029209249,
			2.99321508637137516518,
			3.47123448310209029087,
			4.0200440864446688665,
			4.67251660773285426737,
			5.48742065798615247121,
			6.58536123328921366083,
			8.2763579843642344865,
			11.8242775516584347867,
		};

		template<>
		inline const double* WeightG<16>() { return weight_exp16; }


		static constexpr const double points32[32] = {
			0.044489365833267018419,
			0.234526109519618537453,
			0.576884629301886426492,
			1.072448753817817633041,
			1.72240877644464544113,
			2.52833670642579488112,
			3.492213273021994489609,
			4.61645676974976738776,
			5.90395850417424394656,
			7.358126733186241113222,
			8.98294092421259610338,
			10.7830186325399720675,
			12.76369798674272511497,
			14.9311397555225573198,
			17.29245433671531478924,
			19.85586094033605473979,
			22.63088901319677448868,
			25.62863602245924776748,
			28.86210181632347474434,
			32.34662915396473700323,
			36.10049480575197380402,
			40.14571977153944153621,
			44.50920799575493797591,
			49.22439498730863917672,
			54.33372133339690733287,
			59.89250916213401819613,
			65.9753772879350527966,
			72.68762809066270863868,
			80.18744697791352306749,
			88.73534041789239868936,
			98.82954286828397255918,
			111.7513980979376952137,
		};
		template<>
		inline const double* Points<32>() { return points32; }

		static constexpr const double weight32[32] = {
			0.109218341952384971136,
			0.210443107938813232936,
			0.235213229669848005395,
			0.195903335972881043413,
			0.129983786286071760607,
			0.07057862386571744156,
			0.0317609125091750703058,
			0.0119182148348385570565,
			0.0037388162946115247897,
			9.8080330661495513223E-4,
			2.14864918801364188023E-4,
			3.92034196798794720433E-5,
			5.93454161286863287836E-6,
			7.41640457866755221907E-7,
			7.6045678791207814811E-8,
			6.350602226625806742428E-9,
			4.2813829710409288788E-10,
			2.30589949189133607927E-11,
			9.79937928872709406333E-13,
			3.23780165772926646231E-14,
			8.1718234434207194332E-16,
			1.54213383339382337218E-17,
			2.119792290163618612E-19,
			2.0544296737880454267E-21,
			1.346982586637395155805E-23,
			5.66129413039735937113E-26,
			1.41856054546303690595E-28,
			1.91337549445422430937E-31,
			1.192248760098222356542E-34,
			2.671511219240136986E-38,
			1.33861694210625628272E-42,
			4.5105361938989742322E-48,
		};
		template<>
		inline const double* Weight<32>() { return weight32; }

		static constexpr const double weight_exp32[32] = {
			0.114187105768104848928,
			0.2660652168976152160466,
			0.41879313732485299425,
			0.57253284649980470646,
			0.72764878838097131066,
			0.88453671934024971743,
			1.04361887589207696731,
			1.205349274152352580243,
			1.37022133852178118599,
			1.5387772564686447524,
			1.71161935268645725598,
			1.88942406344948409804,
			2.072959340246533669472,
			2.2631066339969636129,
			2.46088907248823612863,
			2.66750812639711714721,
			2.88439209292204179063,
			3.113261327039586176328,
			3.35621769259580255855,
			3.61586985648426880698,
			3.89551304494854956388,
			4.1993941047115854945,
			4.53311497853436176839,
			4.9042702876112448438,
			5.32350097202366611245,
			5.806333214233621361,
			6.37661467415965254383,
			7.07352658070724212022,
			7.96769350929590065854,
			9.2050403312781895783,
			11.1630130907678730889,
			15.390180415260643105,
		};

		template<>
		inline const double* WeightG<32>() { return weight_exp32; }


		static constexpr const double points64[64] = {
			0.022415874146705280023,
			0.1181225120967704798,
			0.290365744018036484,
			0.53928622122797903932,
			0.86503700464811394462,
			1.26781404077524139812,
			1.74785962605943625283,
			2.30546373930750871855,
			2.94096515672525184068,
			3.65475265020729052704,
			4.447266343313094356743,
			5.31899925449639034352,
			6.27049904692365391291,
			7.30237000258739574722,
			8.415275239483024194495,
			9.609939192796108035763,
			10.8871503838863721426,
			12.24776450424430161816,
			13.69270784554750515273,
			15.22298111152472884801,
			16.83966365264873721053,
			18.54391817085919052362,
			20.33699594873023550115,
			22.22024266595087653992,
			24.19510487593325398989,
			26.26313722711848578513,
			28.4260105275010272995,
			30.68552076752597177105,
			33.04359923643782912552,
			35.50232389114120958698,
			38.06393216564646826036,
			40.73083544445862636573,
			43.5056354664215298527,
			46.39114297861619207361,
			49.39039902562468667924,
			52.50669934134630165018,
			55.74362241327838046334,
			59.10506191901710660885,
			62.59526440015139559606,
			66.21887325124756438221,
			69.98098037714682922853,
			73.88718723248296321096,
			77.9436774344631203137,
			82.1573037783193042952,
			86.53569334945651821022,
			91.0873756131330901456,
			95.82194001552073209477,
			100.7502319695139796293,
			105.8845994687999493564,
			111.2392075244395820635,
			116.8304450513064984634,
			122.6774602685385765774,
			128.8028787692376725128,
			135.233787949525827834,
			142.0031214899315190251,
			149.1516659000493885873,
			156.7310751326711612336,
			164.8086026551505229932,
			173.4749468364242745222,
			182.8582046914314636463,
			193.1511360370729114794,
			204.6720284850594559491,
			218.0318519353285163325,
			234.8095791713261647131,
		};
		template<>
		inline const double* Points<64>() { return points64; }

		static constexpr const double weight64[64] = {
				0.05625284233902984574,
				0.11902398731242602781,
				0.15749640386214452382,
				0.167547050415773947881,
				0.153352855779236618085,
				0.12422105360932974451,
				0.090342300986485057739,
				0.059477755768355024212,
				0.0356275189040360718542,
				0.0194804104311664060433,
				0.0097435948993820022401,
				0.00446431036416627529236,
				0.00187535958132311482675,
				7.2264698157500512272E-4,
				2.55487532833496709714E-4,
				8.28714353439694217906E-5,
				2.46568639678855874597E-5,
				6.726713878829668527613E-6,
				1.68178536996408889782E-6,
				3.85081298154668441483E-7,
				8.0687280409904997904E-8,
				1.545723706757688828E-8,
				2.70448014761748140999E-9,
				4.3167754754272009123E-10,
				6.2777525417614522017E-11,
				8.3063173762889580639E-12,
				9.9840317872201640559E-13,
				1.08835388711666268533E-13,
				1.07401740344159018648E-14,
				9.57573723157444210559E-16,
				7.69702802364858609886E-17,
				5.56488113745402536653E-18,
				3.6097564090104464983E-19,
				2.09509536954894623477E-20,
				1.0847933010975493612E-21,
				4.9946994863638041158E-23,
				2.03783697459882231066E-24,
				7.3395375642788370391E-26,
				2.3237830821986942613E-27,
				6.43823470690876242038E-29,
				1.5531210957882752706E-30,
				3.2442500920195373145E-32,
				5.8323862678362015013E-34,
				8.9632548331028540613E-36,
				1.1687039895507362412E-37,
				1.2820559843599803815E-39,
				1.17209493740500229183E-41,
				8.8353396723286049813E-44,
				5.4249555903061865943E-46,
				2.6755426666788938289E-48,
				1.04291703141136707811E-50,
				3.1529023519577726237E-53,
				7.2295419106475223397E-56,
				1.22423530123008226446E-58,
				1.4821685049019104118E-61,
				1.2325193488145188081E-64,
				6.691499004571269527E-68,
				2.2204659418504489955E-71,
				4.12094609473887625E-75,
				3.7743990618964891704E-79,
				1.41411505291761941746E-83,
				1.5918330640413679179E-88,
				2.9894843488606343077E-94,
				2.0890635084369527708E-101,
		};

		template<>
		inline const double* Weight<64>() { return weight64; }

		static constexpr const double weight_exp64[64] = {
			0.05752803788945258904,
			0.13394745001254483507,
			0.21055952019006275341,
			0.28730674159313745897,
			0.364227443636669253425,
			0.44136699150996197989,
			0.518772490744390800682,
			0.5964921786168889334023,
			0.674575428995967007361,
			0.75307288621771402828,
			0.83203664061384097159,
			0.911520426089580266926,
			0.9915798355270477892,
			1.07227255416963941373,
			1.1536586127339641175,
			1.235800662793412488819,
			1.318764277552654082071,
			1.4026182816757341075,
			1.48743511441922552286,
			1.57329123099770495429,
			1.66026754790322603809,
			1.74844993884468966841,
			1.83792978910258781923,
			1.92880461745247173533,
			2.02117877644994616093,
			2.1151642438579916262,
			2.21088152041886537611,
			2.3084606521360927998,
			2.40804239887634595141,
			2.5097795756063137203,
			2.6138385981803041316,
			2.72040127259742280397,
			2.82966687545834169554,
			2.94185458451072051222,
			3.05720633240365251994,
			3.17599017505567106137,
			3.29850428971767201181,
			3.4250817487303236948,
			3.5560962557131449523,
			3.69196908511496649021,
			3.83317753889189122065,
			3.9802653330614823252,
			4.1338554630096541428,
			4.2946662860683852005,
			4.46353182779689666079,
			4.6414277027025426409,
			4.8295046006493150342,
			5.0291321227984097943,
			5.24195701287730126628,
			5.4699817855490905621,
			5.715672861918366684,
			5.9821124019170982672,
			6.2732165922168386202,
			6.5940581356188162727,
			6.951358017695989996,
			7.354263948608078422,
			7.815638985966463413,
			8.354314484533419619,
			8.999307532255702634,
			9.79844329910944665303,
			10.838203459056448065,
			12.297875504357269169,
			14.642878496843245918,
			19.790473041737693603,
		};

		template<>
		inline const double* WeightG<64>() { return weight_exp64; }


		static constexpr const double points96[96] = {
			0.01498247386279735578 ,
			0.0789461230488020784  ,
			0.19403943619415144128 ,
			0.360318499403013712279,
			0.57783059971144985702 ,
			0.846634333408369166426,
			1.1668015752788020546  ,
			1.53841793520295500946 ,
			1.9615829778382892901  ,
			2.4364104013990188731  ,
			2.96302821939047249462 ,
			3.54157895808354593869 ,
			4.17221987447917836875 ,
			4.85512319708729304791 ,
			5.59047639105280474864 ,
			6.37848244891691196798 ,
			7.21936020826473889771 ,
			8.11334469756196666428 ,
			9.06068751157866761037 ,
			10.06165721792036504755,
			11.11653979632731325771,
			12.22563911256064169884,
			13.38927742886798323913,
			14.60779595321226557861,
			15.8815554296569053169 ,
			17.21093677253059231218,
			18.59634174724747148527,
			20.03819370093648641201,
			21.53693834634001257411,
			23.0930446027801896701 ,
			24.70700549836557365788,
			26.37933913802545411229,
			28.11058974241966462161,
			29.90132876328396126136,
			31.75215608134195348558,
			33.66370129355207656628,
			35.63662509717134091484,
			37.67162077891714874696,
			39.76941581840657130902,
			41.93077361606333874754,
			44.15649535682294611578,
			46.44742202225501832609,
			48.804436565181978431  ,
			51.22846626253061047821,
			53.7204852640394569066 ,
			56.2815173565969034224 ,
			58.91263896644579012548,
			61.6149824243121012562 ,
			64.38973952175925405968,
			67.23816539080926359415,
			70.16158274319579814458,
			73.1613865106280222065 ,
			76.239048933276432037  ,
			79.39612515049824600704,
			82.6342593557898939319 ,
			85.95519158731968933103,
			89.3607652364399027426 ,
			92.85293536965613607385,
			96.43377797507985644033,
			100.1055002629519166798,
			103.8704521720840125199,
			107.7311392608829209573,
			111.6902371940922815227,
			115.7506080759045595132,
			119.9153189284560017815,
			124.1876626742425655541,
			128.5711820547140774727,
			133.0696970091988729301,
			137.687336153659468317 ,
			142.4285731446393633132,
			147.2982688996606295922,
			152.3017208842670496289,
			157.4447209857949412062,
			162.7336238997838642739,
			168.1754284920079528329,
			173.7778753179440465527,
			179.5495644554947773197,
			185.5000991442821687448,
			191.6402625884897549737,
			197.9822379189962351421,
			204.5398851133784300178,
			211.3290942611679904599,
			218.3682429565866003627,
			225.6787985234694580381,
			233.2861262278312386903,
			241.2205980367763189811,
			249.5191530625291123798,
			258.2275608164192389789,
			267.403824157098626253 ,
			277.1235253160818271434,
			287.4886968264098727753,
			298.6436136993047292769,
			310.8056796861862563775,
			324.3344504123146330503,
			339.921409310730665223 ,
			359.3576682858397029394,
		};
		template<>
		inline const double* Points<96>() { return points96; }

		static constexpr const double weight96[96] = {
			0.03787857621904154857    ,
			0.082719906098347603605   ,
			0.11586679913398469736    ,
			0.13383230013229357364    ,
			0.136433303616453343479   ,
			0.12628621203564779721    ,
			0.10769248887981027936    ,
			0.085324129111590665575   ,
			0.063142032425207278844   ,
			0.043798382308331558263   ,
			0.0285464488795496922502  ,
			0.0175128661949778714205  ,
			0.01012564796759256050814 ,
			0.0055227025997542196806  ,
			0.00284340847535510576187 ,
			0.00138261167584396056614 ,
			6.351647717174251629E-4   ,
			2.75739969987877491044E-4 ,
			1.1313616189049865833E-4  ,
			4.3875183098015114315E-5  ,
			1.60823977607240615763E-5 ,
			5.57148004833491816E-6    ,
			1.824020563650868625E-6   ,
			5.64234685747052675466E-7 ,
			1.6488229499853933331E-7  ,
			4.5506013933715985723E-8  ,
			1.18583546660761444694E-8 ,
			2.9167956106813563284E-9  ,
			6.76961168367196734398E-10,
			1.4819499836703112043E-10 ,
			3.0587004517378571638E-11 ,
			5.9495123132094932022E-12 ,
			1.09008410061550172645E-12,
			1.88040639182855528734E-13,
			3.05225498406801841034E-14,
			4.65925773316202434157E-15,
			6.68457363774351498334E-16,
			9.007624836565320348E-17  ,
			1.13927564564573899243E-17,
			1.3514961973993145937E-18 ,
			1.50257584072693619512E-19,
			1.56438402019921492287E-20,
			1.523935207125346407E-21  ,
			1.3877670300200887461E-22 ,
			1.18027527941730114229E-23,
			9.365572923149480889E-25  ,
			6.9265012876891072762E-26 ,
			4.7691560402894742414E-27 ,
			3.0535883693639163851E-28 ,
			1.8158763395675337E-29    ,
			1.00162397296067319524E-30,
			5.1176440544320736757E-32 ,
			2.4185378322197811272E-33 ,
			1.0555712006884409737E-34 ,
			4.2478548465303328343E-36 ,
			1.5734512604770775234E-37 ,
			5.3548530878626397097E-39 ,
			1.67114138623602886322E-40,
			4.7726385928403186697E-42 ,
			1.2446154232721140089E-43 ,
			2.9568746250610227422E-45 ,
			6.38372705378955486E-47   ,
			1.2491323725684231209E-48 ,
			2.20904197713525133018E-50,
			3.5199864956784988674E-52 ,
			5.037351888281251517E-54  ,
			6.451532417064822583E-56  ,
			7.366791173581172114E-58  ,
			7.46915246283914752E-60   ,
			6.6944639727780899529E-62 ,
			5.278604705317515841E-64  ,
			3.6425104071068617554E-66 ,
			2.1870947493414929301E-68 ,
			1.1354926714502458603E-70 ,
			5.062195752800692281E-73  ,
			1.923094555715124794E-75  ,
			6.17261978152671155E-78   ,
			1.6581163669346998141E-80 ,
			3.6880782851086798214E-83 ,
			6.711003906926944359E-86  ,
			9.8541871009330061461E-89 ,
			1.149407276909841872E-91  ,
			1.0458167774934304308E-94 ,
			7.2669524190188802944E-98 ,
			3.76083100898716661E-101  ,
			1.4067947939056761885E-104,
			3.667504399919052586E-108 ,
			6.36965661391785002E-112  ,
			6.960977847977533929E-116 ,
			4.443883681138463017E-120 ,
			1.499333661185293216E-124 ,
			2.3211258953013402609E-129,
			1.3332838377056071903E-134,
			2.0026002659659086154E-140,
			4.028786213250457687E-147 ,
			1.9574149519693184303E-155,
		};

		template<>
		inline const double* Weight<96>() { return weight96; }

		static constexpr const double weight_exp96[96] = {
			0.03845036369673637242 ,
			0.089515016974760219141,
			0.1406789978814892984  ,
			0.1918868785224910102  ,
			0.243147067599363254395,
			0.29447237288152123711 ,
			0.34587637581306733622 ,
			0.39737293524183352702 ,
			0.448976096726636296619,
			0.500700082697482401554,
			0.552559304036194486521,
			0.60456837884059788598 ,
			0.65674215428655139636 ,
			0.70909573027742336165 ,
			0.76164448445275810462 ,
			0.814404098445685841045,
			0.867390585407462753449,
			0.92062031887710211021 ,
			0.97411006310655603259 ,
			1.02787700497351641699 ,
			1.08193878763133303595 ,
			1.1363135460618062606  ,
			1.19101994471318158437 ,
			1.246077217423376589218,
			1.30150520984784588914 ,
			1.35732442463295563134 ,
			1.41355606959967903844 ,
			1.47022210922922663845 ,
			1.52734531977230891677 ,
			1.5849493483375641384  ,
			1.6430587763528036627  ,
			1.70169918783574444493 ,
			1.76089724295952256765 ,
			1.82068075745333560609 ,
			1.88107878844100395901 ,
			1.94212172739119144715 ,
			2.003841400933794395   ,
			2.0662711803891350686  ,
			2.12944610096189124992 ,
			2.19340299167229682527 ,
			2.2581806172355886069  ,
			2.3238198332599547563  ,
			2.3903637563169337567  ,
			2.4578579506505860303  ,
			2.526350633537921729   ,
			2.59589290159915537006 ,
			2.6665389806897688958  ,
			2.7383465023960479089  ,
			2.81137681061257431579 ,
			2.88569530221734894616 ,
			2.9613718064939714898  ,
			3.03848100870050889201 ,
			3.11710292407586517406 ,
			3.1973234296370112889  ,
			3.2792348623921584152  ,
			3.3629366941231490014  ,
			3.44853629473442392896 ,
			3.53614979840097636754 ,
			3.6259030894690866776  ,
			3.7179329283931790669  ,
			3.8123882420864330478  ,
			3.90943160812434578435 ,
			4.0092409685329669853  ,
			4.11201161676276095948 ,
			4.217958511351680825   ,
			4.3273189823250274091  ,
			4.44035591238105121475 ,
			4.5573614954750019486  ,
			4.6786617020505687487  ,
			4.8046216149607392749  ,
			4.9356518459773996268  ,
			5.072216303811683783   ,
			5.2148416666104238812  ,
			5.3641290234262942467  ,
			5.5207683025991065647  ,
			5.68555631882059308783 ,
			5.8594195728571762375  ,
			6.0434433715513197071  ,
			6.2389094684377113162  ,
			6.447345365520527714   ,
			6.670589842375367886   ,
			6.910881489272985513   ,
			7.17098053524468651    ,
			7.454340007562352578   ,
			7.7653519553780956389  ,
			8.109711436856996731   ,
			8.494971922268986631   ,
			8.931425052052720653   ,
			9.433557978437482174   ,
			10.022603115371658942  ,
			10.731314742027299154  ,
			11.6137422159645861705 ,
			12.7677463574997938737 ,
			14.396481871456101372  ,
			17.0281146916874961    ,
			22.842059978678711602  ,
		};

		template<>
		inline const double* WeightG<96>() { return weight_exp96; }



		template<int N, class FUNC>
		inline double Integrate(FUNC F) {
			const double* x = Points<N>();
			const double* w = Weight<N>();

			double sum = 0.0;
			for (int i = 0; i < N; ++i) {
				sum += F(x[i]) * w[i];
			}
			return sum;
		}


		template<int N, class T, class FUNC>
		inline T IntegrateT(FUNC F) {
			const double* x = Points<N>();
			const double* w = Weight<N>();

			T sum{};
			for (int i = 0; i < N; ++i) {
				sum += F(x[i]) * w[i];
			}
			return sum;
		}


		template<int N, class FUNC>
		inline double IntegrateG(FUNC G) {
			const double* x = Points<N>();
			const double* w_exp = WeightG<N>();

			double sum = 0.0;
			for (int i = 0; i < N; ++i) {
				sum += G(x[i]) * w_exp[i];
			}
			return sum;
		}


		template<int N, class T, class FUNC>
		inline T IntegrateGT(FUNC G) {
			const double* x = Points<N>();
			const double* w_exp = WeightG<N>();

			T sum{};
			for (int i = 0; i < N; ++i) {
				sum += G(x[i]) * w_exp[i];
			}
			return sum;
		}

		template<int N, class FUNC>
		inline double LagrangeInterpolation(double x, FUNC F) {
			double val = 0.0;
			const auto& points = Points<N>();
			for (int i = 0; i < N; ++i) {
				double v = F(points[i]) * exp(-x);
				for (int j = 0; j < N; ++j) {
					if (j == i) continue;
					v *= (x - points[j]) / (points[i] - points[j]);
				}
				val += v;
			}
			return val;
		};

		template<int N, class FUNC>
		inline double LagrangeInterpolationG(double x, FUNC G) {
			double val = 0.0;
			const auto& points = Points<N>();
			for (int i = 0; i < N; ++i) {
				double v = G(points[i])* exp(-(x- points[i]));  //because G(x) includes exp(-x);
				for (int j = 0; j < N; ++j) {
					if (j == i) continue;
					v *= (x - points[j]) / (points[i] - points[j]);
				}
				val += v;
			}
			return val;
		};

		/*
		*
		*  size of coef should be N.
		*  For n < N-1,
		*  c^{n}_{0} = -a_n/m * c^{n-1}_{0}
		*  c^{n}_{k} = -a_n/m * c^{n-1}_{k} + 1/m * c^{n-1}_{k-1}
		*  c^{n}_{n} = 1/m * c^{n-1}_{n-1}
		*
		****************/
		template<int N, class FUNC>
		inline void CoefLagrangeInterpolation(double* coef, FUNC F) {
			for (int j = 0; j < N; ++j) {
				coef[j] = 0.0;
			}

			double* t_coef = new double[N];
			const auto& points = Points<N>();
			for (int i = 0; i < N; ++i) {
				

				t_coef[0] = 1.0;
				int n = 1;
				for (int j = 0; j < N; ++j) {
					if (j == i) continue;

					const double mather = 1.0 / (points[i] - points[j]);

					t_coef[n] = mather * t_coef[n - 1];
					for (int k = n-1; k > 0; --k) {
						t_coef[k] = -points[j] * mather * t_coef[k] + mather * t_coef[k-1];
					}
					t_coef[0] = -points[j] * mather * t_coef[0];
					
					++n;
				}

				const double F_i = F(points[i]);

				for (int j = 0; j < N; ++j) {
					coef[j] += F_i* t_coef[j];
				}

			}
			delete[] t_coef;
		};

	}

}
